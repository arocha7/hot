heat_template_version: 2014-10-16

description: Simple template to deploy an autoscaling group

parameters:
  key_name:
    type: string
    label: Key Name
    description: Name of key-pair to be used for compute instance \
      execute "$ nova keypair-list" to get a list if available keys
    default: son-key

  image_id:
    type: string
    label: Image ID
    description: Image to be used for compute instance
    default: cirros
    constraints:
      - allowed_values: [ centos6, centos7, trusty, cirros ]
        description: execute "$ glance image-list" to get a list if available images 

  flavor_id:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used
    default: fl.default
    constraints:
      - allowed_values: [ fl.default, fl.large, fl.xlarge, fl.huge ]
        description: execute "$ nova flavor-list" to get a list if available flavors

  network_id:
    type: string
    label: Network ID
    description: 
    default: net-ptin
    constraints:
      - allowed_values: [ net-ptin, net04-ext ]
        description: execute "$ neutron net-list" to get a list if available network segments

resources:

  asg:
    type: OS::Heat::AutoScalingGroup
    properties:
      resource:
        type: OS::Nova::Server
        properties:
          key_name: { get_param: key_name }
          image: { get_param: image_id }
          flavor: { get_param: flavor_id }
          networks: [{network: {get_param: network_id} }]
          security_groups: [default]
          metadata: {"metering.stack": {get_param: "OS::stack_id"}}
      min_size: 1
      desired_capacity: 1
      max_size: 5

  scale_up_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: asg}
      cooldown: 60
      scaling_adjustment: 1

  scale_dw_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: asg}
      cooldown: 60
      scaling_adjustment: '-1'

  CPUAlarmHigh:
    type: OS::Ceilometer::Alarm
    properties:
      description: Scale-up if the average CPU > 75% for 10 minutes
      meter_name: cpu_util
      statistic: avg
      period: '120'
      evaluation_periods: '1'
      threshold: '75'
      alarm_actions: [{get_attr: [scale_up_policy, alarm_url]}]
      matching_metadata: {'metadata.user_metadata.stack': {get_param: "OS::stack_id"}}
      comparison_operator: gt

  CPUAlarmLow:
    type: OS::Ceilometer::Alarm
    properties:
      description: Scale-down if the average CPU < 25% for 10 minutes
      meter_name: cpu_util
      statistic: avg
      period: '120'
      evaluation_periods: '1'
      threshold: '25'
      alarm_actions: [{get_attr: [scale_dw_policy, alarm_url]}]
      matching_metadata: {'metadata.user_metadata.stack': {get_param: "OS::stack_id"}}
      comparison_operator: lt

outputs:
  instance_ip:
    description: the IP address of the instance
    value: { get_attr: [asg, first_address] }
